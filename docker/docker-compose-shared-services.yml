version: "3.3"
networks:
  gatv_network:
    driver: overlay
    attachable: true
services:
  zookeeper:
    image: bitnami/zookeeper:3.6.1
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    tmpfs: "/datalog"
    networks:
      - gatv_network
    deploy:
      placement:
        constraints: [
          node.role == worker,
          node.labels.kafka != true
        ]
      restart_policy:
        condition: on-failure
  kafka:
    image: bitnami/kafka:2.4.0
    ports:
      - '29092:29092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://192.168.0.160:29092
    depends_on:
      - zookeeper
    networks:
      - gatv_network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 30s
      timeout: 10s
      retries: 4
    deploy:
      placement:
        constraints: [
          node.role == worker,
          node.labels.kafka == true,
        ]
      restart_policy:
        condition: on-failure
  kafdrop:
    image: obsidiandynamics/kafdrop:3.26.0
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    networks:
      - gatv_network
    ports:
      - "9001:9000"
    depends_on: 
      - kafka
    deploy:
      placement:
        constraints: [
          node.role == manager
        ]
      restart_policy:
        condition: on-failure