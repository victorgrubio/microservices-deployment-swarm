version: "3.3"
networks:
  public:
    driver: overlay
    attachable: true
services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    networks:
      - public
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    deploy:
      placement:
        constraints: [
          node.role == manager
        ]
      restart_policy:
        condition: on-failure
  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.1.4
    command: "kong migrations bootstrap"
    networks:
      - public
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    depends_on:
      - kong-database
    deploy:
      placement:
        constraints: [
          node.role == manager
        ]
      restart_policy:
        condition: on-failure
  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.1.4
    networks:
      - public
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_SSL_CERT: /certs/fullchain.pem
      KONG_SSL_CERT_KEY: /certs/privkey.pem
      KONG_ADMIN_SSL_CERT:  /certs/fullchain.pem
      KONG_ADMIN_SSL_CERT_KEY: /certs/privkey.pem
      KONG_SSL: "on"
    volumes:
      - /etc/letsencrypt/archive/gatv-dev.duckdns.org/fullchain2.pem:/certs/fullchain.pem
      - /etc/letsencrypt/archive/gatv-dev.duckdns.org/privkey2.pem:/certs/privkey.pem
    depends_on:
      - kong-database
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8002:8000"
      - "8001:8001"
      - "8000:8443"
      - "8444:8444"
    deploy:
      placement:
        constraints: [
          node.role == manager
        ]
      restart_policy:
        condition: on-failure
  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:0.14.9
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga"
    networks:
      - public
    depends_on:
      - kong-database
    deploy:
      placement:
        constraints: [
          node.role == manager
        ]
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:0.14.9
    networks:
        - public   
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"
    deploy:
      placement:
        constraints: [
          node.role == manager
        ]
      restart_policy:
        condition: any
  pushpin:
    image: fanout/pushpin:1.28.0
    volumes:
      - pushpin_config:/etc/pushpin
    ports:
      - 5560-5563:5560-5563
      - 7999:7999
    networks:
      - public
    deploy:
      placement:
        constraints: [
          node.role == manager
        ]
      restart_policy:
        condition: any
volumes:
  kong_data:
  pushpin_config:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/pushpin_api/config

